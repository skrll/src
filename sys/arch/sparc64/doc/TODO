/* $NetBSD: TODO,v 1.32 2021/01/31 19:08:05 palle Exp $ */

Things to be done:

common:
- make %g6 point to curcpu
- make %g7 point to curlwp
- change run-time checks for cpu type to function pointers

sun4u:
- GENERIC.UP kernel hangs on v445 (missing interrupt?)

sun4v:
 - current status:
     The kernel boots and starts userland.
	 During the execution of the sysinst process, a sub-process crashes.
	 The crash happens when a call to sysctl from /bin/sh causes a mmu trap.
	 Part of the TRAP_SETUP() call in sun4v_datatrap issues a 'save' instruction.
	 Since %cansave is 0 (%canrestore is 6 and %otherwin is 0) a SPILL trap is generated.
	 The current code ends up in the pcbspill codepath (which is based on code from openbsd).
	 This code assumes that it is the register window in the OTHERWIN window that must be spilled
	 to the pcb.
	 Since %otherwin in this scenario actually is zero, we end up putting incorrect register
	 window values to the pcb.
	 So - this code should not save data to the pcb when %otherwin is 0 - it should spill the
	 values to the stack of the user process. Special care should be taken here, since we
	 may end up with a mmu fault again if the stack address is not present in the mmu, so
	 perhaps spilling to the physical address of the stack will work.
	 Time will show if this is correct...
- 64-bit kernel support
- 32-bit kernel support
- libkvm
- ofwboot: tlb_init_sun4v() hardcodes number of slots to 64
- locore.s: sun4v_datatrap missing implementation for trap level 1
- check build without SUN4V defined
- replace relevant references to %ver with GET_MAXCWP
- pmap_mp_init(): sun4v missing handling
- replace constructs like "wrpr %g0, PSTATE_KERN, %pstate" with NORMAL_GLOBALS
- replace constructs line "wrpr %g0, PSTATE_INTR, %pstate" with ALTERNATE_GOBALS
- sun4v tsb no need to lock... per cpu... anyway...
- ci_tsb_desc->td_ctxidx: -1 or 1?
- MP support - currently bypassed in pmap_bootstrap() for sun4v
- vpci.c/vpcivar.h: cleanup FIXMEs
- interrupts not handled properly (com at ebus only...)
- mpt(4) complains: mpt0: Phy 0: Link Status Unknown
- man pages for drivers imported from OpenBSD lke vpci, vbus, cbus, vdsk, ldc etc.
- vdsk and ldc drivers: code maked with OPENBSD_BUSDMA - make the bus_dma stuff work properly
- vbus.c: handle prom_getprop() memory leaks
- locore.s: rft_user (sun4v specific manaul fill) - seems to work, but is it good enough (compared to openbsds rft_user?
 - platforms tested so far:
 -- qemu sun4v/niagara - crash in init process relaed to fork (stack?)
 -- T2000 - mmu fault somewhere
 -- T5 - stickcmpr is not properly initialized ???
